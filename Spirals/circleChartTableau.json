{"svgId":"svg5","tooltips":{},"filename":"circleChart.json","svgImage":"","custDataVars":{},"stdDataVars":["barPct","seriesName","barTxtPct","barTxtVal"],"custPropVars":{},"stdPropVars":[{"variable":"duration","source":"property","isCustom":false,"type":"numeric","titleName":"duration","displayName":"Duration","defaultValue":"1000","minValue":"0","maxValue":"1000"},{"variable":"color1","source":"property","isCustom":false,"type":"color","titleName":"color1","displayName":"color1","defaultValue":"#ff0000"},{"variable":"color2","source":"property","isCustom":false,"type":"color","titleName":"color2","displayName":"color2","defaultValue":"#008800"},{"variable":"color3","source":"property","isCustom":false,"type":"color","titleName":"color3","displayName":"color3","defaultValue":"#0000ff"},{"variable":"color4","source":"property","isCustom":false,"type":"color","titleName":"color4","displayName":"color4","defaultValue":"#00ffff"},{"variable":"color5","source":"property","isCustom":false,"type":"color","titleName":"color5","displayName":"color5","defaultValue":"#ff00ff"},{"variable":"seriesFont","source":"property","isCustom":false,"type":"fontFamily","titleName":"seriesFont","displayName":"Series Font","defaultValue":"Arial"},{"variable":"seriesFontSize","source":"property","isCustom":false,"type":"fontSize","titleName":"seriesFontSize","displayName":"Series FontSize","defaultValue":"4"},{"variable":"valueFont","source":"property","isCustom":false,"type":"fontFamily","titleName":"valueFont","displayName":"Value Font","defaultValue":"Arial"},{"variable":"valueFontSize","source":"property","isCustom":false,"type":"fontSize","titleName":"valueFontSize","displayName":"Value FontSize","defaultValue":"4"}],"srcTool":"tableau"}